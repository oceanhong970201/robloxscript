if not game:IsLoaded() then
    repeat wait() until game:IsLoaded()
end
if game.PlaceId == 8750997647 then 
if _G.Theme == "" then
    _G.Theme = "BloodTheme"
end
--\\UI//--
local CoreGui = game:GetService("StarterGui") 
local GameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib(tostring(GameName), _G.Theme)
local Tab = Window:NewTab("Recent Update")
local Tab1 = Window:NewTab("Main")
local Tab2 = Window:NewTab("Pets")
local Tab3 = Window:NewTab("Teleportion")
local Tab4 = Window:NewTab("Coins")
local Tab5 = Window:NewTab("Upgrades")
local Tab6 = Window:NewTab("Others")
local Update = Tab:NewSection("Update Logs")
local Section = Tab1:NewSection("Farm")
local Section2 = Tab2:NewSection("Pets")
local Section3 = Tab3:NewSection("Teleportion")
local Section4 = Tab4:NewSection("Coins")
local Section5 = Tab5:NewSection("Upgrades")
local Section6 = Tab6:NewSection("Others")
Update:NewLabel("Latest update:2022/7/31")
Update:NewLabel("2022/7/31")
Update:NewLabel("[+]Tapping Legend X Updated")
Update:NewLabel("[+]Added New Eggs")
Update:NewLabel("[+]Added New World")
Update:NewLabel("[+]Fixed Bugs")
CoreGui:SetCore("SendNotification", {
    Title = "Game Founded",
    Text = "Game:"..GameName,
   Duration = 3;
   })
--\\functions//--
function ClosestPart()
    local dist = math.huge
    local target = nil
    for i,v in pairs(game:GetService("Workspace").Drops.Heaven:GetChildren()) do
        local magnitude = (v.Root.Position - game:GetService("Players").LocalPlayer.Character.Head.Position).magnitude
        if magnitude < dist then
            dist = magnitude
            target = v.Name
        end
    end
    return target
end

function Tap()
    game:GetService("ReplicatedStorage").Remotes.Tap:FireServer()
end

function Rebirth(Rebirthamount)
    local args = {
       [1] = Rebirthamount
    }
    game:GetService("ReplicatedStorage").Remotes.Rebirth:FireServer(unpack(args))
end
    
function BuyEgg(EggType,eggamountAtOnce)
    local args = {
        [1] = tostring(EggType),
        [2] = tonumber(eggamountAtOnce)
    }
    game:GetService("ReplicatedStorage").Remotes.BuyEgg:InvokeServer(unpack(args))
end

function AutoUpgrade(Ingri,UpgradeType)
    spawn(function ()
        while Upgrade == true do
            local args = {
                [1] = tostring(Ingri),
                [2] = tostring(UpgradeType)
            }
            
            game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
            wait(.2)
        end
    end)   
end

function Teleport(World)
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters[tostring(World)] .CFrame
end
--\\serverhop -cridit to CharWar
local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local Deleted = false
local File = pcall(function()
    AllIDs = game:GetService('HttpService'):JSONDecode(readfile("NotSameServers.json"))
end)
if not File then
    table.insert(AllIDs, actualHour)
    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
end
function TPReturner()
    local Site;
    if foundAnything == "" then
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100'))
    else
        Site = game.HttpService:JSONDecode(game:HttpGet('https://games.roblox.com/v1/games/' .. PlaceID .. '/servers/Public?sortOrder=Asc&limit=100&cursor=' .. foundAnything))
    end
    local ID = ""
    if Site.nextPageCursor and Site.nextPageCursor ~= "null" and Site.nextPageCursor ~= nil then
        foundAnything = Site.nextPageCursor
    end
    local num = 0;
    for i,v in pairs(Site.data) do
        local Possible = true
        ID = tostring(v.id)
        if tonumber(v.maxPlayers) > tonumber(v.playing) then
            for _,Existing in pairs(AllIDs) do
                if num ~= 0 then
                    if ID == tostring(Existing) then
                        Possible = false
                    end
                else
                    if tonumber(actualHour) ~= tonumber(Existing) then
                        local delFile = pcall(function()
                            delfile("NotSameServers.json")
                            AllIDs = {}
                            table.insert(AllIDs, actualHour)
                        end)
                    end
                end
                num = num + 1
            end
            if Possible == true then
                table.insert(AllIDs, ID)
                wait()
                pcall(function()
                    writefile("NotSameServers.json", game:GetService('HttpService'):JSONEncode(AllIDs))
                    wait()
                    game:GetService("TeleportService"):TeleportToPlaceInstance(PlaceID, ID, game.Players.LocalPlayer)
                end)
                wait(4)
            end
        end
    end
end

function Teleport()
    while wait() do
        pcall(function()
            TPReturner()
            if foundAnything ~= "" then
                TPReturner()
            end
        end)
    end
end
--\\section//--
Section:NewToggle("Auto Tap", "Auto Tap", function(a)
    AutoTap = a
    while AutoTap and a== true do
        Tap()
        task.wait()
    end
end)
Section:NewLabel("Rebirth")
local Rebirthamount
Section:NewDropdown("Rebirth Amount", "Rebirth Amount", {"Max",1, 2, 3,4, 5, 6, 7, 8, 9,10, 11, 12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42}, function(CHOOSERebirthamount)
     print(Rebirthamount)
     Rebirthamount = CHOOSERebirthamount
end)

Section:NewToggle("AutoRebirth", "AutoRebirth", function(b)
    AutoRebirth = b
    while AutoRebirth and b == true do
        Rebirth(Rebirthamount)
        task.wait(.1)
    end
end)
Section:NewToggle("Auto CollectDrill", "CollectDrill", function(Drill)
    AutoDrill = Drill
    while AutoDrill and Drill == true do
        local args = {
            [1] = "Collect"
        }
        
        game:GetService("ReplicatedStorage").Remotes.DrillInteraction:InvokeServer(unpack(args))
        print("Collected Drill")
        task.wait(600)
    end
end)
--\\Section2//--
local EggType
Section2:NewDropdown("EggType", "EggType", {"Basic Egg", "Forest Egg", "Desert Egg","Rare Egg", "Winter Egg", "Lava Egg","Aqua Egg", "Sakura Egg", "Mine Egg","Galaxy Egg", "Heaven Egg","Hell Egg","Tech Egg","Steampunk Egg","Firework Egg","Patriotic Egg","Swamp Egg","Candy Egg","Castle Egg","40M Summer Egg","Magic Egg"}, function(CHOOSEGG)
     print(CHOOSEGG)
     EggType = CHOOSEGG
     game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Eggs[tostring(CHOOSEGG)].E.CFrame
end)

local eggamountAtOnce
Section2:NewDropdown("Amount of Open Egg At Once", "Amount of Open Egg At Once", {"1", "3", "4"}, function(CHOOSEGGAMOUNT)
     print(CHOOSEGGAMOUNT)
     eggamountAtOnce = CHOOSEGGAMOUNT
end)

Section2:NewToggle("Auto EGG", "Auto EGG", function(d)
    AutoEgg = d
    while AutoEgg and d == true do
        BuyEgg(tostring(EggType),tonumber(eggamountAtOnce))
        task.wait()
    end
end)
Section2:NewButton("Equip Best Pet", "Equip Best Pet", function()
    game:GetService("ReplicatedStorage").Remotes.UnequipAll:InvokeServer()
    wait(.5)
    game:GetService("ReplicatedStorage").Remotes.EquipBest:InvokeServer()
end)
--\\Section3//--
Section3:NewButton("To Spawn", "To Spawn", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Spawn.CFrame
end)

Section3:NewButton("To Forest", "To Forest", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Forest.CFrame
end)

Section3:NewButton("To Desert", "To Desert", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Desert.CFrame
end)

Section3:NewButton("To Winter", "To Winter", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Winter.CFrame
end)

Section3:NewButton("To Lava", "To Lava", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Lava.CFrame
end)

Section3:NewButton("To Aqua", "To Aqua", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Aqua.CFrame
end)

Section3:NewButton("To Sakura", "To Sakura", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Sakura.CFrame
end)

Section3:NewButton("To Mines", "To Mines", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Mines.CFrame
end)

Section3:NewButton("To Galaxy", "To Galaxy", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Galaxy.CFrame
end)

Section3:NewButton("To Heaven", "To Heaven", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Heaven.CFrame
end)

Section3:NewButton("To Hell", "To Hell", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Hell.CFrame
end)
Section3:NewButton("To Tech", "To Tech", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Tech.CFrame
end)
Section3:NewButton("To Steampunk", "To Tech", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Steampunk.CFrame
end)
Section3:NewButton("To Swamp", "To Swamp", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Swamp.CFrame
end)
Section3:NewButton("To Candy", "To Candy", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Candy.CFrame
end)
Section3:NewButton("To Event", "To Event", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Event.CFrame
end)
Section3:NewButton("To Magic", "To Magic", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters.Magic.CFrame
end)

Section3:NewLabel("Chests")

Section3:NewButton("To Crown Chest", "To Crown Chest", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Chest["Crown Chest"]["Crown Chest"].PrimaryPart.CFrame
end)

Section3:NewButton("To Swamp Chest", "To Galaxy", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Chest["Swamp Chest"]["Swamp Chest"].PrimaryPart.CFrame
end)

Section3:NewButton("To Lava Chest", "To Lava Chest", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Chest["Lava Chest"]["Lava Chest"].PrimaryPart.CFrame
end)

Section3:NewButton("To Hell Chest", "To Hell Chest", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Chest["Hell Chest"]["Hell Chest"].PrimaryPart.CFrame
end)
Section3:NewButton("To Event Chest", "To Event Chest", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Chest["Event Chest"]["Event Chest"].PrimaryPart.CFrame
end)

Section3:NewLabel("Machines")

Section3:NewButton("To Golden Machine", "To Golden Machine", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Golden Machine"].Decor["Meshes/Golden Machine_Circle.004 (1)"].CFrame
end)

Section3:NewButton("To Rainbow Machine", "To Rainbow Machine", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Rainbow Machine"].RainbowMachine["Meshes/Rainbow Machine_Circle.023 (1)"].CFrame
end)

Section3:NewButton("To Index Machine", "To Index Machine", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace")["Index Machine"]["Index Machine"].Main.CFrame
end)

Section3:NewButton("To Upgrade Machine", "To Upgrade Machine", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").MainMap["Upgrade Machine"]["Meshes/Upgrade Machine_Circle (1)"].CFrame
end)

Section3:NewButton("To Vial Machine", "To Vial Machine", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").MainMap["Vial Machine"]["Meshes/Vial Machine_Plane.013 (1)"].CFrame
end)
Section3:NewButton("To Drill", "To Drill", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").UIProx.DrillMenu.CFrame
end)
Section3:NewButton("To Enchanter", "Enchanter", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Enchanter.Model.Board.CFrame
end)
Section3:NewButton("To Soul Extractor", "Soul Extractor", function()
    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Extractor["Soul Extractor"]["Meshes/Extractor_Circle"].CFrame
end)
--\\section4//--
local WorldToFarm
Section4:NewDropdown("Choose World", "Choose World", {"Forest", "Desert", "Winter","Lava", "Aqua", "Sakura", "Sakura", "Mines", "Galaxy","Heaven","Hell","Tech","Steampunk","Swamp","Event","Candy","Magic"}, function(CHOOSEWORLD)
     print(CHOOSEWORLD)
     WorldToFarm = CHOOSEWORLD
     game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").Teleporters[tostring(CHOOSEWORLD)].CFrame
end)

local function click()
    local a = game:service("VirtualInputManager")
    a:SendMouseButtonEvent(500, 500, 0, true, game, 1)
    wait() 
    a:SendMouseButtonEvent(500, 500, 0, false, game, 1)
end

function Killing()
    for i,v in pairs(game:GetService("Workspace").Drops[tostring(WorldToFarm)]:GetChildren()) do
        for o,p in pairs(v:GetChildren()) do 
            if p:IsA "Part" then
                for a,b in pairs(v:GetChildren()) do 
                    if b:IsA "NumberValue" then
                        pcall(function()
                            repeat task.wait()
                                if b.value > 1 and p.Parent ~= nil and Mob == true then
                                    game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = p.CFrame+ Vector3.new(0, 1, 0)
                                    local args = {
                                        [1] = tostring(v.Name)
                                    }
                                    
                                    game:GetService("ReplicatedStorage").Remotes.Tap:FireServer(unpack(args))
                                end
                            until b.value < 1 or p.Parent == nil or v == nil
                        end)
                    else
                        task.wait()
                    end
                end
            end
        end
    end
end

Section4:NewToggle("Farm Selected World", "Farm Selected World", function(e)
    Mob = e
    print("Auto Mob is:", e)
    while Mob == true do
        Killing()
        wait(.1)
    end
end)
--\\Section5//--
Section5:NewLabel("Ruby Upgrades")

Section5:NewToggle("TapMultiplier", "TapMultiplier", function(z)
    TapMultiplier = z
    while TapMultiplier == true do
        local args = {
            [1] = "Ruby",
            [2] = "TapMultiplier"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)

Section5:NewToggle("FreeAutoClicker", "FreeAutoClicker", function(g)
    FreeAutoClicker = g
    while FreeAutoClicker == true do
        local args = {
            [1] = "Ruby",
            [2] = "FreeAutoClicker"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)

Section5:NewToggle("RebirthsUpgrade", "RebirthsUpgrade", function(h)
    RebirthsUpgrade = h
    while RebirthsUpgrade == true do
        local args = {
            [1] = "Ruby",
            [2] = "RebirthsUpgrade"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)

Section5:NewToggle("PetStorage", "PetStorage", function(i)
    PetStorage = i
    while PetStorage == true do
        local args = {
            [1] = "Ruby",
            [2] = "PetStorage"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)

Section5:NewToggle("WalkSpeed", "WalkSpeed", function(j)
    WalkSpeed = j
    while WalkSpeed == true do
        local args = {
            [1] = "Ruby",
            [2] = "WalkSpeed"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)        
    end
end)

Section5:NewToggle("CriticalChances", "CriticalChances", function(k)
    CriticalChances = k
    while CriticalChances == true do
        local args = {
            [1] = "Ruby",
            [2] = "CriticalChances"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)

Section5:NewToggle("AutoClickerMultiplier", "AutoClickerMultiplier", function(l)
    AutoClickerMultiplier = l
    while l == true do
        local args = {
            [1] = "Ruby",
            [2] = "AutoClickerMultiplier"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewLabel("Pet Tokens")
Section5:NewToggle("TapDamage", "TapDamage", function(m)
    TapDamage = m
    while TapDamage == true do
        local args = {
            [1] = "Tokens",
            [2] = "TapDamage"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))        
        wait(.5)
    end
end)
Section5:NewToggle("AutoClickerMultiplier", "AutoClickerMultiplier", function(n)
    AutoClickerMultiplier = n
    while AutoClickerMultiplier == true do
        local args = {
            [1] = "Tokens",
            [2] = "PetsEquipped"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewToggle("GoldenChance", "GoldenChance", function(o)
    GoldenChance = o
    while GoldenChance == true do
        local args = {
            [1] = "Tokens",
            [2] = "GoldenChance"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewToggle("FasterEggs", "FasterEggs", function(p)
    FasterEggs = p
    while FasterEggs == true do
        local args = {
            [1] = "Tokens",
            [2] = "FasterEggs"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewToggle("MoreLuck", "MoreLuck", function(q)
    MoreLuck = q
    while MoreLuck == true do
        local args = {
            [1] = "Tokens",
            [2] = "MoreLuck"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewToggle("RainbowChance", "RainbowChance", function(r)
    RainbowChance = r
    while RainbowChance == true do
        local args = {
            [1] = "Tokens",
            [2] = "RainbowChance"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        wait(.5)
    end
end)
Section5:NewToggle("RubyMultiplier", "RubyMultiplier", function(s)
    RubyMultiplier = s
    while RubyMultiplier == true do
        local args = {
            [1] = "Tokens",
            [2] = "RubyMultiplier"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        
        wait(.5)
    end
end)
Section5:NewToggle("ChestChances", "ChestChances", function(t)
    ChestChances = t
    while ChestChances == true do
        local args = {
            [1] = "Tokens",
            [2] = "ChestChances"
        }
        
        game:GetService("ReplicatedStorage").Remotes.Upgrade:InvokeServer(unpack(args))
        
        wait(.5)
    end
end)
--\\Section6//--
Section6:NewButton("Redeem Codes", "Redeem Codes", function()
    local TappingLegendsX = {"toadboi","russo","fixes1","release","1klikes","fixes2","2.5klikes","update1","5klikes","easterluck","2ndhunt","10klikesthankyou!","bridgey10th","sneakysign8th","rewardchest7th","6thpetindex","eggluck5th","carrot3rd","firsthunt","rainbow","bigpoostpack","1mgroupmembers","mines","20klikesforvials","1mgroupmembers","mines","galaxy","10m","30kcoolcode","40kreallyhotcode","fixes3","15m","50ksuscode","sorryfix","70kepic","tech","steampunk","80knicevials","summer","fixes4","candy"}
    for i = 1, 5 do
        for i ,v in pairs(TappingLegendsX) do
            game:GetService("ReplicatedStorage").Remotes.RedeemCode:InvokeServer(v)
        end
    end
end)
Section6:NewButton("Collect Time Reward", "Collect Time Reward", function()
    local time = {1,2,3,4,5,6,7,8,9}
    for i = 1, 5 do
        for i ,v in pairs(time) do
            game:GetService("ReplicatedStorage").Remotes.PlaytimeReward:FireServer(v)
        end
    end
    
end)
Section6:NewButton("Rejoin Server", "Rejoin Server", function()
    pcall(function ()
        spawn(function ()
            game:GetService("TeleportService"):Teleport(game.PlaceId, game:GetService("Players").LocalPlayer)
        end)
    end)
end)
Section6:NewButton("ServerHop", "ServerHop", function()
    pcall(function ()
        spawn(function ()
            Teleport()
        end)
    end)
end)
Section6:NewSlider("Walkspeed Changer", "Walkspeed Changer", 500, 0, function(s) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

Section6:NewSlider("Jumppower Changer", "Jumppower Changer", 500, 0, function(a) -- 500 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.JumpPower  = a
end)

Section6:NewKeybind("Q to toggle on/off", "Q", Enum.KeyCode.Q, function()
	Library:ToggleUI()
end)
Section6:NewLabel("Made by (_　_)。゜zｚＺ#0850")
Section6:NewLabel("Anti-AFK is always on")
Section6:NewLabel("Will AutoRejoin If Kicked")
local vu = game:GetService("VirtualUser")

game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
getgenv().rejoin = game:GetService("CoreGui").RobloxPromptGui.promptOverlay.ChildAdded:Connect(function(child)
    if child.Name == 'ErrorPrompt' and child:FindFirstChild('MessageArea') and child.MessageArea:FindFirstChild("ErrorFrame") then
        game:GetService("TeleportService"):Teleport(game.PlaceId)
    end
end)
end
game:GetService("StarterGui") :SetCore("SendNotification", {
    Title = "Script Loaded",
    Text = "Thanks For Using, Discord Server link copied to ur clipboard",
   Duration = 6;
   })
--\\end//--
